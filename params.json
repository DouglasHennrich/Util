{"name":"Util","tagline":"Códigos úteis","body":"## Installation\r\n\r\nRequirements:\r\n\r\n* Mac OS 10.9 or newer\r\n* Ruby 2.0 or newer (`ruby -v`)\r\n* Xcode\r\n\r\nAdditionally, to an Xcode installation, you also need the Xcode command line tools set up.\r\n\r\n    xcode-select --install\r\n\r\n### [Fastlane](https://fastlane.tools/)\r\nInstall the gem and all its dependencies (this might take a few minutes).\r\n\r\n    sudo gem install fastlane --verbose\r\n\r\nIn case RubyGems has a hard time installing Nokogiri, check out their [official installation guide](http://www.nokogiri.org/tutorials/installing_nokogiri.html).\r\n\r\n### Tifastlane\r\n\r\n    [sudo] npm install -g tifastlane\r\n\r\nNow you are ready to get started :D\r\n\r\n## Get Started\r\n\r\nInside your app directory, you first need to setup and configure TiFastlane:\r\n\r\n\ttifast setup\r\n\r\nOnce your configuration is set, then you want to initialize your app:\r\n\r\n\ttifast init\r\n\r\nAnd then finally when you are ready, you'll want to send your app for review at the App Store:\r\n\r\n\ttifast send\r\n\r\n**It's that easy!**\r\n\r\nBelow you will find full documentation on every step and other tools available to you.\r\n\r\n## Usage\r\n\r\n`tifastlane` or `tifast` must be executed from your Titanium App directory. It will automatically read your tiapp.xml to determine your App configuration for all the tools.\r\n\r\n#### Available Commands\r\n* [tifast setup](#tifast-setup)\r\n* [tifast init](#tifast-init)\r\n* [tifast status](#tifast-status)\r\n* [tifast register](#tifast-register)\r\n* [tifast send](#tifast-send)\r\n* [tifast pem](#tifast-pem)\r\n* [tifast pilot](#tifast-pilot)\r\n* [tifast snapshot](#tifast-snapshot)\r\n\r\n#### CLI Help\r\n\r\nEach of TiFastlane's commands has it's own set of arguments you can use to further control. You can easily look at each avaiable argument with -h, for example:\r\n\r\ntifast setup -h\r\n\r\n### Tifast Setup\r\nThis will configure TiFastlane on your current project.\r\n\r\n    tifast setup\r\n\r\n### Tifast Init\r\nTiFastlane needs to initialize the configuration files needed to keep iTunes Connect updated with the correct information. If the app **is not in iTunes Connect** then run to start fresh settings:\r\n\r\n\r\n    tifast init\r\n\r\nIf your app **is already on iTunes Connect**, then run the wizard which will automatically download all your current metadata and screenshots:\r\n\r\n    tifast init -s\r\n\r\n### Tifast Status\r\nYou can view the current settings that would be used by running:\r\n\r\n    tifast status\r\n\r\nYou will see something like this:\r\n\r\n```javascript\r\nApple ID Username: contact@universopositivo.com.br\r\nName: Easy Ticket\r\nAppId: br.com.universopositivo.easyTicket\r\nVersion: 1.0.0\r\nCFBundleVersion: 107\r\nGUID: \"32cc538e-4fd3-4d6e-9999-870ce50ab039\"\r\nSKU: \"xxxxxxxxxxxxxx\"\r\n```\r\n\r\n### Tifast Register\r\nRegister your Titanium App ID on the Apple Developer Program and iTunes Connect, and then generate the Provisioning Profiles for App Store, Ad Hoc and Development.\r\n\r\n    tifast register\r\n\r\nEverything is done behind the scenes using [produce](https://github.com/fastlane/produce) and [sigh](https://github.com/KrauseFx/sigh). If the App ID already exists on the Developer Program or iTunes Connect it will be safely skipped.\r\n\r\nFor default provisiong profiles will be generated for all platforms, but if you wish you can target a single platform: `appstore`, `adhoc`, `development` or leave empty for all.\r\n\r\n    tifast register <platform>\r\n\r\n### Tifast Send\r\n\r\nWhen you have a new version of your App that you wish to push to iTunes Connect, all you have to do is:\r\n\r\n\ttifast send\r\n\r\n\r\nIf you want to **Update only Medata and Screenshots**  of your App without having to submit a new version or binary.\r\n\r\n    tifast send -m\r\n\r\nIf you want to **Upload an Beta version** of your app.\r\n\r\n    tifast send -t\r\n\r\n\r\n### Tifast PEM\r\n\r\nGenerate or rewnew your push certificates by using:\r\n\r\n\ttifast pem [password]\r\n\r\nFor default certificates will be created for distribution using the password you define, if you want to target the development certificates then use:\r\n\r\n\ttifast pem -d [password]\r\n\r\nTo renew push certificate, even if the current one is active for 30 more days\r\n\r\n    tifast pem -f [password]\r\n\r\n\r\n### Tifast Pilot\r\n* [Documentation for Pilot](./Pilot.md)\r\n\r\n### Tifast Snapshot\r\n* [Documentation for Snapshot](./Snapshot.md)\r\n\r\n\r\n## Configuration Files\r\n\r\nAll metadata and screenshots are easily maintained from the `TiFLDelivery\\APPID` directory, here you will find the following files:\r\n\r\n**Deliveryfile**\r\n\r\nYou can configure Price, Copyright, Developer Notes, etc. You can read the full [documentation here](https://github.com/KrauseFx/deliver/blob/master/Deliverfile.md).\r\n\r\n**./metadata/[LANG]/*.txt**\r\n\r\nIn this directory you will see several text files with the contents of the metadata that is language dependant.\r\n\r\n#### Available languages\r\n`da`, `de-DE`, `el`, `en-AU`, `en-CA`, `en-GB`, `en-US`, `es-ES`, `es-MX`, `fi`, `fr-CA`, `fr-FR`, `id`, `it`, `ja`, `ko`, `ms`, `nl`, `no`, `pt-BR`, `pt-PT`, `ru`, `sv`, `th`, `tr`, `vi`, `zh-Hans`, `zh-Hant`\r\n\r\n**./screenshots/[LANG]/*.***\r\n\r\nAs with metadata, screenshots support multi language. Based on the dimension of the images they will be correctly set to the appropiate device. The images are ordered alphabetically, so make sure to name them correctly to control the right display order.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}